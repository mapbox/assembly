/**
 * Extra rules that come in handy in certain cases.
 * @section Miscellaneous
*/

/**
 * Disable touch and click events on an element and
 * it's children. Be aware that this rule does not disable keyboard events,
 * or prevent a user from tabbing to an element and pressing return to trigger
 * it's click event.
 *
 * @memberof Miscellaneous
 * @example
 * <div class='btn events-none'>You can't click this</div>
 */
.events-none {
  -webkit-touch-callout: none;
  pointer-events: none;
}

/**
 * This rule enables touch and click events on an element and
 * it's children. Use to re-enable events inside a parent with the `events-none` class.
 *
 * @memberof Miscellaneous
 * @example
 * <div class='events-none'><div class='events-all'>You can click this.</div></div>
 */
.events-all {
  -webkit-touch-callout: default;
  pointer-events: all;
}

/**
 * Disable text selection on an element and it's children. Use only in cases where accidental
 * text selection causes user frustration.
 *
 * @memberof Miscellaneous
 * @example
 * <div class='select-none'>You can't select this.</div>
 */
.select-none {
  user-select: none;
}

/**
 * Enable text selection on an element and it's children.
 * Use to re-enable events inside a parent with the `events-none` class.
 *
 * @memberof Miscellaneous
 * @example
 * <div class='select-none'><div class='select-text'>You can select this.</div></div>
 */
.select-text {
  user-select: text;
}

/**
 * Disable transition on elements like [`btn`](#btn) that have default transitions.
 *
 * @memberof Miscellaneous
 * @example
 * <div class='btn transition-none'>.transition-none</div>
 */
.transition-none {
  transition: auto;
}

/**
 * Always show scrollbars.
 *
 * @memberof Miscellaneous
 * @example
 *   <div class='scroll-always'>Curabitur blandit tempus porttitor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Etiam porta sem malesuada magna mollis euismod. Maecenas faucibus mollis interdum. Donec ullamcorper nulla non metus auctor fringilla. Nullam id dolor id nibh ultricies vehicula ut id elit.</div>
 */
.scroll-always {
  overflow: scroll !important;
}

/**
 * Display scrollbars if content would flow beyond the edge of element.
 *
 * @memberof Miscellaneous
 * @example
 *   <div class='h48 scroll-auto'>Curabitur blandit tempus porttitor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Etiam porta sem malesuada magna mollis euismod. Maecenas faucibus mollis interdum. Donec ullamcorper nulla non metus auctor fringilla. Nullam id dolor id nibh ultricies vehicula ut id elit.</div>
 */
.scroll-auto {
  overflow: auto !important;
}

/**
 * Clip content if it reaches the edge of element.
 *
 * @memberof Miscellaneous
 * @example
 *   <div class='h48 clip'>Curabitur blandit tempus porttitor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Etiam porta sem malesuada magna mollis euismod. Maecenas faucibus mollis interdum. Donec ullamcorper nulla non metus auctor fringilla. Nullam id dolor id nibh ultricies vehicula ut id elit.</div>
 */
.clip {
  overflow: hidden !important;
}

/**
 * Display the default focus outline.
 *
 * Inputs, selects, buttons, and links use this default focus outline already.
 * You'll need to apply this class to other things that you make focusable
 * (e.g. by adding a tabindex). *If you do not use this class on a focusable
 * element, that element will receive the browser's default focus outline.*
 *
 * @memberof Miscellaneous
 * @example
 * <div tabindex='0' class='focusable inline-block bg-blue-light p6'>
 *   I am a div but focusable
 * </div>
 */
.focusable:focus {
  outline: 0 !important;
  box-shadow: var(--focus-shadow) !important;
}
